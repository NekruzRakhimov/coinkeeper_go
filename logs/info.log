[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/19 - 18:24:06 | 404 |         792ns |             ::1 | GET      "/tasks?is_done=true"
2024/08/19 18:24:12.823785 Client with ip: [::1] requested list of users
2024/08/19 18:24:12.839554 Client with ip: [::1] got list of users
[GIN] 2024/08/19 - 18:24:12 | 200 |   15.862833ms |             ::1 | GET      "/users"
[GIN] 2024/08/19 - 18:25:05 | 200 |         374µs |             ::1 | PUT      "/users/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operations               --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operations/:id           --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/19 - 18:26:41 | 200 |    1.978459ms |             ::1 | PUT      "/users/1"
[GIN] 2024/08/19 - 18:26:46 | 200 |      61.584µs |             ::1 | PUT      "/users/3"
[GIN] 2024/08/19 - 18:26:51 | 200 |      76.125µs |             ::1 | PUT      "/users/3"
[GIN] 2024/08/19 - 19:12:06 | 500 |   66.710417ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:10:01 | 200 |     224.041µs |             ::1 | GET      "/ping"
[GIN] 2024/08/21 - 16:11:09 | 500 |   10.081625ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/08/21 - 16:11:25 | 201 |    3.277334ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/08/21 - 16:12:27 | 200 |     4.03625ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/08/21 - 16:13:36 | 200 |     487.541µs |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:14:19 | 200 |         288µs |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:15:39 | 200 |     448.291µs |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:22:17 | 200 |    2.383291ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:23:15 | 500 |     3.46075ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:24:43 | 200 |   16.361166ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:25:57 | 200 |    2.781791ms |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 16:26:24 | 200 |       1.956ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:26:49 | 200 |    3.830583ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:28:59 | 200 |    2.429792ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:29:14 | 200 |    4.410791ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:29:39 | 200 |   18.001292ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:30:24 | 200 |    5.012709ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:34:34 | 404 |         917ns |             ::1 | GET      "/operations/1/details"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 401 with 500
[GIN] 2024/08/21 - 16:34:49 | 401 |    9.046666ms |             ::1 | GET      "/operations/1"
[GIN] 2024/08/21 - 16:35:13 | 200 |       349.5µs |             ::1 | GET      "/operations/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 16:36:05 | 200 |       4.477ms |             ::1 | GET      "/operations/1"
[GIN] 2024/08/21 - 18:20:35 | 401 |    5.019291ms |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 18:20:41 | 200 |   48.771792ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/08/21 - 18:21:09 | 200 |   17.824125ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 18:27:44 | 201 |   23.819917ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/08/21 - 18:28:01 | 200 |    1.255917ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/08/21 - 18:28:17 | 200 |   20.891541ms |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 18:28:34 | 200 |   20.573916ms |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 18:28:45 | 200 |     792.625µs |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/08/21 - 18:28:53 | 200 |    3.570167ms |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 18:49:56 | 201 |   28.082375ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/08/21 - 18:52:48 | 200 |    4.419792ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/08/21 - 19:07:50 | 401 |      1.3675ms |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:07:55 | 401 |      15.667µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:13:22 | 401 |      3.9975ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :8181
[GIN] 2024/08/21 - 19:13:38 | 401 |      169.75µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:13:54 | 401 |      23.208µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:14:19 | 401 |         167µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:19:45 | 401 |     884.291µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:20:06 | 401 |     665.917µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:20:31 | 200 |   72.685708ms |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:20:55 | 401 |     228.166µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:21:20 | 401 |      190.25µs |             ::1 | GET      "/operations"
[GIN] 2024/08/21 - 19:21:36 | 200 |     4.75075ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on 8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/08/26 - 17:03:07 | 201 |  221.360041ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/08/26 - 17:03:15 | 200 |    5.095167ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:03:47 | 200 |    3.146083ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:04:01 | 401 |    1.648667ms |       127.0.0.1 | GET      "/operations"
[GIN] 2024/08/26 - 17:04:39 | 200 |    3.257709ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/08/26 - 17:05:07 | 200 |    3.835292ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:05:08 | 200 |    1.428167ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:05:08 | 200 |       538.5µs |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:05:27 | 500 |    9.042666ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/08/26 - 17:10:16 | 201 |   93.281291ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/08/26 - 17:10:32 | 404 |         750ns |       127.0.0.1 | GET      "/auth/sign-in"
[GIN] 2024/08/26 - 17:10:48 | 200 |   13.705709ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/08/26 - 17:11:30 | 400 |     121.958µs |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:11:43 | 500 |    2.679125ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/08/26 - 17:15:12 | 200 |    3.971042ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:15:29 | 200 |    4.333042ms |       127.0.0.1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/08/26 - 17:17:33 | 201 |   10.865959ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/08/26 - 17:17:38 | 200 |    2.133542ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/08/26 - 17:18:53 | 500 |    6.852083ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/26 - 19:16:12 | 201 |   52.867708ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/08/26 - 19:16:15 | 500 |    4.960708ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/26 - 19:16:59 | 500 |     4.79225ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/26 - 19:18:44 | 500 |    3.969667ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/26 - 19:27:27 | 400 |    3.333292ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/28 - 18:57:10 | 400 |    2.111334ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/08/28 - 19:09:19 | 201 |   50.124875ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/08/28 - 19:09:29 | 500 |    3.029166ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/28 - 19:10:17 | 500 |    2.852166ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/28 - 19:13:56 | 500 |    3.123291ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/28 - 19:15:35 | 500 |    3.320125ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/28 - 19:18:38 | 500 |    1.796209ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/28 - 19:20:46 | 400 |    1.846625ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/30 - 14:43:46 | 404 |    1.717708ms |       127.0.0.1 | GET      "/docs/"
[GIN] 2024/08/30 - 14:43:46 | 404 |         833ns |       127.0.0.1 | GET      "/favicon.ico"
[GIN] 2024/08/30 - 14:44:15 | 200 |    8.576625ms |       127.0.0.1 | GET      "/docs/swagger.yml"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN] 2024/08/30 - 14:45:14 | 200 |    6.366042ms |       127.0.0.1 | GET      "/docs/swagger.yml"
[GIN] 2024/08/30 - 14:50:30 | 404 |         500ns |       127.0.0.1 | GET      "/swagger/index.html"
[GIN] 2024/08/30 - 14:50:45 | 404 |         593µs |       127.0.0.1 | GET      "/docs/index.html"
[GIN] 2024/08/30 - 14:50:57 | 404 |      76.459µs |       127.0.0.1 | GET      "/docs/index.html"
[GIN] 2024/08/30 - 14:51:38 | 404 |    3.619375ms |       127.0.0.1 | GET      "/docs/index.html"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/09/02 - 18:46:02 | 400 |   84.060125ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/09/02 - 18:46:11 | 500 |    6.737792ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/09/02 - 18:47:28 | 201 |   22.207125ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/09/02 - 18:47:34 | 500 |   10.800792ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/09/02 - 18:48:31 | 200 |    8.178125ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/09/02 - 18:48:51 | 401 |      263.25µs |       127.0.0.1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/09/02 - 18:49:43 | 200 |    5.943417ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/09/02 - 18:49:58 | 500 |   19.340792ms |       127.0.0.1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/09/02 - 18:51:13 | 200 |    7.893167ms |       127.0.0.1 | GET      "/operations"
[GIN] 2024/09/02 - 18:51:38 | 200 |    2.331666ms |       127.0.0.1 | GET      "/operations"
[GIN] 2024/09/02 - 18:52:15 | 200 |    2.165458ms |       127.0.0.1 | GET      "/operations?q=la"
[GIN] 2024/09/02 - 18:52:23 | 200 |    2.135333ms |       127.0.0.1 | GET      "/operations?q=t"
[GIN] 2024/09/02 - 18:55:08 | 200 |    3.045792ms |       127.0.0.1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/09/02 - 19:14:14 | 201 |   26.544417ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN] 2024/09/02 - 19:14:51 | 201 |     5.58575ms |       127.0.0.1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on localhost:8181
[GIN] 2024/09/02 - 19:28:01 | 200 |    3.203542ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/09/02 - 19:28:26 | 200 |     5.76025ms |       127.0.0.1 | GET      "/operations?q="
[GIN] 2024/09/02 - 19:30:53 | 201 |    2.235667ms |       127.0.0.1 | POST     "/operations"
[GIN] 2024/09/02 - 19:31:07 | 200 |    7.877375ms |       127.0.0.1 | GET      "/operations"
[GIN] 2024/09/02 - 19:31:47 | 401 |      68.625µs |       127.0.0.1 | PUT      "/operations/1"
[GIN] 2024/09/02 - 19:32:21 | 403 |     646.041µs |       127.0.0.1 | PUT      "/operations/1"
[GIN] 2024/09/02 - 19:32:59 | 200 |    9.315458ms |       127.0.0.1 | POST     "/auth/sign-in"
[GIN] 2024/09/02 - 19:33:09 | 500 |   12.166541ms |       127.0.0.1 | PUT      "/operations/1"
[GIN] 2024/09/02 - 19:33:24 | 500 |    4.870375ms |       127.0.0.1 | PUT      "/operations/1"
[GIN] 2024/09/02 - 19:34:07 | 200 |    4.158958ms |       127.0.0.1 | PUT      "/operations/1"
[GIN] 2024/09/02 - 19:34:22 | 200 |   15.724959ms |       127.0.0.1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN] 2024/09/11 - 15:35:48 | 404 |         292ns |             ::1 | GET      "/"
[GIN] 2024/09/11 - 15:35:48 | 404 |         250ns |             ::1 | GET      "/favicon.ico"
[GIN-debug] redirecting request 301: /swagger/ --> /swagger/
[GIN] 2024/09/11 - 15:35:51 | 404 |     382.667µs |             ::1 | GET      "/swagger/"
[GIN] 2024/09/11 - 15:35:58 | 200 |    3.509625ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 15:35:58 | 200 |    1.592041ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 15:35:58 | 200 |       1.235ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 15:35:58 | 200 |    2.262791ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 15:35:58 | 200 |     973.375µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 15:35:58 | 200 |      31.917µs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/11 - 15:35:58 | 200 |      19.708µs |             ::1 | GET      "/swagger/favicon-16x16.png"
[GIN] 2024/09/11 - 15:36:13 | 401 |    6.649125ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 500
[GIN] 2024/09/11 - 15:36:27 | 400 |    6.205541ms |             ::1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN] 2024/09/11 - 15:45:41 | 200 |     990.042µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 15:45:42 | 200 |    1.370209ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 15:45:42 | 200 |     330.625µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 15:45:42 | 200 |    1.224208ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 15:45:42 | 200 |      310.25µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 15:45:42 | 200 |      66.375µs |             ::1 | GET      "/swagger/favicon-16x16.png"
[GIN] 2024/09/11 - 15:45:55 | 201 |  111.483292ms |             ::1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN] 2024/09/11 - 15:48:27 | 200 |     626.833µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 15:48:27 | 200 |     348.875µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 15:48:27 | 200 |       393.5µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 15:48:27 | 200 |    8.366333ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 15:48:27 | 200 |     311.458µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 15:48:40 | 200 |   30.692625ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 15:48:59 | 200 |    3.154125ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 15:49:00 | 200 |     218.666µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN] 2024/09/11 - 15:53:13 | 200 |    1.567542ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 15:53:13 | 200 |     533.833µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 15:53:13 | 200 |    8.348417ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 15:53:13 | 200 |    3.974083ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 15:53:13 | 200 |     968.625µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 15:53:13 | 200 |      59.208µs |             ::1 | GET      "/swagger/favicon-16x16.png"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> coinkeeper/pkg/controllers.GetAllUsers (3 handlers)
[GIN-debug] GET    /users/:id                --> coinkeeper/pkg/controllers.GetUserByID (3 handlers)
[GIN-debug] POST   /users                    --> coinkeeper/pkg/controllers.CreateUser (3 handlers)
[GIN-debug] PUT    /users/:id                --> coinkeeper/pkg/controllers.UpdateUser (3 handlers)
[GIN-debug] DELETE /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PATCH  /users/:id                --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operations               --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /operations               --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /operations/:id           --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /operations/:id           --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /operations/:id           --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-types          --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-types/:id      --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] POST   /operation-categories     --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] GET    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] PUT    /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN-debug] DELETE /operation-categories/:id --> github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (2 handlers)
[GIN] 2024/09/11 - 15:56:37 | 200 |     907.416µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 15:56:37 | 200 |      1.3265ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 15:56:37 | 200 |     404.292µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 15:56:37 | 200 |    1.665209ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 15:56:37 | 200 |    1.720917ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 15:56:37 | 200 |        99.5µs |             ::1 | GET      "/swagger/favicon-16x16.png"
[GIN] 2024/09/11 - 15:57:51 | 201 |   71.364667ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/11 - 15:57:59 | 200 |    4.632417ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 15:58:14 | 401 |      913.75µs |             ::1 | GET      "/operations"
[GIN] 2024/09/11 - 15:58:25 | 200 |     27.5105ms |             ::1 | GET      "/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:12:06 | 200 |      1.5115ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:12:06 | 200 |       2.966ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:12:06 | 200 |    2.107542ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:12:06 | 200 |    1.832042ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:12:06 | 200 |      246.75µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 16:12:48 | 200 |      477.25µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:12:48 | 304 |     101.791µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:12:48 | 304 |       59.25µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:12:48 | 304 |      43.916µs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:12:48 | 200 |    2.770083ms |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:13:04 | 200 |     793.833µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:13:04 | 200 |    1.678417ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:13:04 | 200 |    1.145833ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:13:04 | 200 |    1.810167ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:13:04 | 200 |     286.208µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:22:09 | 200 |      875.25µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:22:09 | 200 |     529.667µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:22:09 | 200 |     541.542µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:22:09 | 200 |    1.297833ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:22:09 | 200 |     293.542µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 16:22:18 | 404 |       4.625µs |             ::1 | GET      "/operations/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:23:23 | 200 |     591.541µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:23:23 | 200 |     453.167µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:23:23 | 200 |     558.042µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:23:23 | 200 |    1.941667ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:23:23 | 200 |     631.625µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 16:23:24 | 200 |      52.333µs |             ::1 | GET      "/swagger/favicon-16x16.png"
[GIN] 2024/09/11 - 16:23:29 | 401 |     147.041µs |             ::1 | GET      "/api/operations/1"
[GIN] 2024/09/11 - 16:23:37 | 200 |      8.9625ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 16:24:02 | 200 |    6.115292ms |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 16:24:10 | 500 |   49.000583ms |             ::1 | GET      "/api/operations/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:28:15 | 200 |     558.625µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:28:15 | 200 |      329.25µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:28:15 | 200 |     356.042µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:28:15 | 200 |    1.030917ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:28:15 | 200 |     553.584µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 16:28:26 | 200 |   16.194416ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 16:29:19 | 201 |     810.833µs |             ::1 | POST     "/api/operations"
[GIN] 2024/09/11 - 16:29:26 | 200 |   17.024916ms |             ::1 | GET      "/api/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:30:45 | 201 |   37.127583ms |             ::1 | POST     "/api/operations"
[GIN] 2024/09/11 - 16:30:52 | 200 |    3.641792ms |             ::1 | GET      "/api/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:38:56 | 200 |     682.708µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:38:56 | 200 |    2.244709ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:38:56 | 200 |       518.5µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:38:56 | 200 |     2.56925ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:38:56 | 200 |     312.958µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:40:07 | 200 |    1.054291ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:40:07 | 200 |      355.25µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:40:07 | 200 |     394.875µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:40:07 | 200 |    1.637458ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:40:07 | 200 |     335.167µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 16:40:21 | 200 |     598.083µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:40:21 | 304 |     162.208µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:40:21 | 304 |     191.834µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:40:21 | 304 |      23.458µs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:40:21 | 200 |     196.125µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:40:51 | 200 |    1.098416ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:40:51 | 200 |     963.958µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:40:51 | 200 |     318.125µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:40:51 | 200 |    1.319584ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:40:51 | 200 |     303.542µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/operations/:id       --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:41:34 | 200 |     774.875µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:41:34 | 200 |     377.667µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:41:34 | 200 |    1.414416ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:41:34 | 200 |    3.231417ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:41:34 | 200 |     276.417µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 16:41:44 | 401 |     804.875µs |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 16:41:54 | 200 |   17.520042ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 16:42:12 | 200 |   28.442209ms |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 16:42:49 | 403 |     468.375µs |             ::1 | PUT      "/api/operations/2"
[GIN] 2024/09/11 - 16:43:18 | 200 |   13.492834ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 16:43:33 | 200 |   58.524708ms |             ::1 | PUT      "/api/operations/2"
[GIN] 2024/09/11 - 16:43:40 | 200 |    2.234417ms |             ::1 | GET      "/api/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 16:48:47 | 200 |     242.167µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 16:48:48 | 200 |     806.917µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 16:48:48 | 200 |     339.833µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 16:48:48 | 200 |    1.534667ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 16:48:48 | 200 |     478.375µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 17:04:49 | 200 |       636.5µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 17:04:49 | 200 |     354.791µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 17:04:49 | 200 |     370.417µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 17:04:49 | 200 |    2.014625ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 17:04:49 | 200 |     522.667µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 18:18:09 | 404 |         208ns |             ::1 | GET      "/"
[GIN] 2024/09/11 - 18:19:14 | 201 |    111.0365ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/11 - 18:19:32 | 200 |    8.264916ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 18:21:00 | 200 |   26.007292ms |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 18:21:38 | 201 |   61.513542ms |             ::1 | POST     "/api/operations"
[GIN] 2024/09/11 - 18:21:44 | 200 |    1.613042ms |             ::1 | GET      "/api/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 18:38:05 | 200 |     578.041µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 18:38:05 | 200 |     275.458µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 18:38:05 | 200 |     407.292µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 18:38:05 | 200 |    1.247708ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 18:38:05 | 200 |     285.791µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 18:46:10 | 200 |     744.042µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 18:46:10 | 200 |     350.375µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 18:46:10 | 200 |       1.097ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 18:46:10 | 200 |     688.833µs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 18:46:10 | 200 |     354.916µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 18:54:46 | 200 |     765.042µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 18:54:46 | 200 |     245.167µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 18:54:46 | 200 |   10.619042ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 18:54:46 | 200 |    5.043917ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 18:54:46 | 200 |     454.958µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 18:54:46 | 200 |     140.125µs |             ::1 | GET      "/swagger/favicon-16x16.png"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN] 2024/09/11 - 19:04:33 | 200 |     780.041µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/11 - 19:04:33 | 200 |      365.25µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/11 - 19:04:33 | 200 |     427.917µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/11 - 19:04:33 | 200 |    3.805958ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/11 - 19:04:34 | 200 |     323.709µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/11 - 19:04:34 | 200 |      86.625µs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/11 - 19:07:14 | 200 |   27.555708ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/11 - 19:07:37 | 200 |     24.8105ms |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 19:08:20 | 200 |   10.240666ms |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 19:08:22 | 200 |   12.598792ms |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 19:08:23 | 200 |    1.209375ms |             ::1 | GET      "/api/operations"
[GIN] 2024/09/11 - 19:08:36 | 200 |    2.048791ms |             ::1 | GET      "/api/operations"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> coinkeeper/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> coinkeeper/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> coinkeeper/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /api/users                --> coinkeeper/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /api/users/:id            --> coinkeeper/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /api/users                --> coinkeeper/pkg/controllers.CreateUser (4 handlers)
[GIN-debug] PUT    /api/users/:id            --> coinkeeper/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] DELETE /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PATCH  /api/users/:id            --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operations           --> coinkeeper/pkg/controllers.GetAllOperations (4 handlers)
[GIN-debug] POST   /api/operations           --> coinkeeper/pkg/controllers.CreateOperation (4 handlers)
[GIN-debug] GET    /api/operations/:id       --> coinkeeper/pkg/controllers.GetOperationByID (4 handlers)
[GIN-debug] PUT    /api/operations/:id       --> coinkeeper/pkg/controllers.UpdateOperation (4 handlers)
[GIN-debug] DELETE /api/operations/:id       --> coinkeeper/pkg/controllers.DeleteOperation (4 handlers)
[GIN-debug] GET    /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-types      --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-types/:id  --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] POST   /api/operation-categories --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] GET    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] PUT    /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
[GIN-debug] DELETE /api/operation-categories/:id --> coinkeeper/pkg/controllers.checkUserAuthentication (3 handlers)
